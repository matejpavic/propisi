{"version":3,"sources":["components/autoskolaL.svg","components/Login.js","components/Page.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","onInputChange","isAuthenticated","className","src","autoskolaL","alt","type","name","placeholder","onChange","to","Page","onLogoutClick","onClick","href","App","event","target","value","setState","state","exact","path","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,wC,0NCyC5BC,EApCD,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,gBAC3B,OAEE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAYF,UAAU,WAAWG,IAAI,SAC/C,oEAGA,2BACAC,KAAK,WACLC,KAAK,WACLL,UAAU,yBACVM,YAAY,gBACZC,SAAUT,KAGU,IAApBC,EACE,kBAAC,IAAD,CAAMS,GAAG,SACT,4BACAR,UAAU,2CADV,aAKA,kBAAC,IAAD,CAAMQ,GAAG,YACT,4BACAR,UAAU,2CADV,gBC6BGS,EAvDF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACd,OACC,yBAAKV,UAAU,wCACd,kBAAC,IAAD,CAAMQ,GAAG,YACT,4BACCG,QAASD,EACTV,UAAU,yDAFX,YAMA,yBAAKA,UAAU,kBACd,uBAAGA,UAAU,eAAeY,KAAM,wCACjC,yBAAKZ,UAAU,iEAAf,mCAED,uBAAGA,UAAU,eAAeY,KAAM,wCACjC,yBAAKZ,UAAU,iEAAf,0CAED,uBAAGA,UAAU,eAAeY,KAAM,wCACjC,yBAAKZ,UAAU,iEAAf,oCAED,uBAAGA,UAAU,eAAeY,KAAM,wCACjC,yBAAKZ,UAAU,iEAAf,sCAED,uBAAGA,UAAU,eAAeY,KAAM,wCACjC,yBAAKZ,UAAU,iEAAf,uCAED,uBAAGA,UAAU,eAAeY,KAAM,wCACjC,yBAAKZ,UAAU,iEAAf,4CAED,uBAAGA,UAAU,eAAeY,KAAM,wCACjC,yBAAKZ,UAAU,iEAAf,mDAED,uBAAGA,UAAU,eAAeY,KAAM,wCACjC,yBAAKZ,UAAU,iEAAf,qCAED,uBAAGA,UAAU,eAAeY,KAAM,wCACjC,yBAAKZ,UAAU,iEAAf,sCAED,uBAAGA,UAAU,eAAeY,KAAM,wCACjC,yBAAKZ,UAAU,iEAAf,4CAED,uBAAGA,UAAU,eAAeY,KAAM,wCACjC,yBAAKZ,UAAU,iEAAf,+DAED,uBAAGA,UAAU,eAAeY,KAAM,wCACjC,yBAAKZ,UAAU,iEAAf,sDAED,uBAAGA,UAAU,eAAeY,KAAM,wCACjC,yBAAKZ,UAAU,iEAAf,2C,qBCHUa,E,kDApCb,aAAe,IAAD,8BACZ,gBAMHf,cAAgB,SAACgB,GACG,UACbA,EAAMC,OAAOC,OACf,EAAKC,SAAS,CAAElB,iBAAiB,KAVvB,EAcdW,cAAgB,WACZ,EAAKO,SAAS,CAAElB,iBAAiB,KAbnC,EAAKmB,MAAQ,CACXnB,iBAAiB,GAHP,E,qDAmBZ,OACM,kBAAC,IAAD,KACE,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,aAChB,kBAAC,EAAD,CAAOtB,cAAiBuB,KAAKvB,cAAeC,gBAAiBsB,KAAKH,MAAMnB,mBAE1E,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,UAChB,kBAAC,EAAD,CAAMV,cAAiBW,KAAKX,wB,GA5B1BY,aCAEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8724841d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/autoskolaL.cab7700a.svg\";","import React from 'react';\r\nimport autoskolaL from './autoskolaL.svg';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Login = ({onInputChange, isAuthenticated}) => { \r\n    return (\r\n      \r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={autoskolaL} className=\"App-logo\" alt=\"logo\" />\r\n          <p>\r\n            Prometni propisi i sigurnosna pravila\r\n          </p>\r\n          <input\r\n          type='password'\r\n          name='password'\r\n          className='bg-light-blue w-30 ma2' \r\n          placeholder='Unesi lozinku'\r\n          onChange={onInputChange}\r\n          />\r\n          {\r\n          isAuthenticated === true ? \r\n            <Link to='/page'>\r\n            <button\r\n            className=\"f5 bg-green br-pill grow ba bw2 ph3 pv1\">\r\n              Pristupi\r\n            </button>\r\n            </Link> :\r\n            <Link to='/propisi'>\r\n            <button\r\n            className=\"f5 bg-green br-pill grow ba bw2 ph3 pv1\">\r\n              Pristupi\r\n            </button>\r\n            </Link>\r\n          }\r\n        </header>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Page = ({onLogoutClick}) => {\r\n\treturn (\r\n\t\t<div className='flex flex-column vh-100 bg-dark-gray'>\r\n\t\t\t<Link to='/propisi'>\r\n\t\t\t<button \r\n\t\t\t\tonClick={onLogoutClick}\r\n\t\t\t\tclassName='f7 w-20 ml7 mr0 mb4 mt4 dim br3 bg-light-red shadow-5'>\r\n\t\t\t\t\tLog out\r\n\t\t\t</button>\r\n\t\t\t</Link>\r\n\t\t\t<div className='db center w-80'>\r\n\t\t\t\t<a className='no-underline' href={'https://quizizz.com/join?gc=12580408'}> \r\n\t\t\t\t\t<div className='f6 center dim ph3 pv2 mb2 tc white bg-green w-65 br3 shadow-5'>1. Propisi u cestovnom prometu</div> \r\n\t\t\t\t</a>\r\n\t\t\t\t<a className='no-underline' href={'https://quizizz.com/join?gc=50335288'}>\r\n\t\t\t\t\t<div className='f6 center dim ph3 pv2 mb2 tc white bg-green w-65 br3 shadow-5'>2. Ponašanje sudionika u prometu</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a className='no-underline' href={'https://quizizz.com/join?gc=27266616'}>\r\n\t\t\t\t\t<div className='f6 center dim ph3 pv2 mb2 tc white bg-green w-65 br3 shadow-5'>3. Cesta i njena obilježja</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a className='no-underline' href={'https://quizizz.com/join?gc=59772472'}>\r\n\t\t\t\t\t<div className='f6 center dim ph3 pv2 mb2 tc white bg-green w-65 br3 shadow-5'>4.1. Znakovi u prometu - Prvi dio</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a className='no-underline' href={'https://quizizz.com/join?gc=61869624'}>\r\n\t\t\t\t\t<div className='f6 center dim ph3 pv2 mb2 tc white bg-green w-65 br3 shadow-5'>4.2. Znakovi u prometu - Drugi dio</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a className='no-underline' href={'https://quizizz.com/join?gc=14945848'}>\r\n\t\t\t\t\t<div className='f6 center dim ph3 pv2 mb2 tc white bg-green w-65 br3 shadow-5'>5. Ostali sudionici u cestovnom prometu</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a className='no-underline' href={'https://quizizz.com/join?gc=47451704'}>\r\n\t\t\t\t\t<div className='f6 center dim ph3 pv2 mb2 tc white bg-green w-65 br3 shadow-5'>6. Uočavanje prometnih uvjeta i situacije</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a className='no-underline' href={'https://quizizz.com/join?gc=07605816'}>\r\n\t\t\t\t\t<div className='f6 center dim ph3 pv2 mb2 tc white bg-green w-65 br3 shadow-5'>7.1. Prometna pravila - Prvi dio</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a className='no-underline' href={'https://quizizz.com/join?gc=42733112'}>\r\n\t\t\t\t\t<div className='f6 center dim ph3 pv2 mb2 tc white bg-green w-65 br3 shadow-5'>7.2. Prometna pravila - Drugi dio</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a className='no-underline' href={'https://quizizz.com/join?gc=02887224'}>\r\n\t\t\t\t\t<div className='f6 center dim ph3 pv2 mb2 tc white bg-green w-65 br3 shadow-5'>8. Vozilo u funkciji sigurnosti prometa</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a className='no-underline' href={'https://quizizz.com/join?gc=40635960'}>\r\n\t\t\t\t\t<div className='f6 center dim ph3 pv2 mb2 tc white bg-green w-65 br3 shadow-5'>9. / 10. Vožnja u naselju / Vožnja izvan naselja</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a className='no-underline' href={'https://quizizz.com/join?gc=43781688'}>\r\n\t\t\t\t\t<div className='f6 center dim ph3 pv2 mb2 tc white bg-green w-65 br3 shadow-5'>11. Postupak u slučaju prometne nesreće</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a className='no-underline' href={'https://quizizz.com/join?gc=29101624'}>\r\n\t\t\t\t\t<div className='f6 center dim ph3 pv2 mb2 tc white bg-green w-65 br3 shadow-5'>12. Vožnja u posebnim uvjetima</div>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Page;","import React, { Component } from 'react';\nimport Login from './components/Login';\nimport Page from './components/Page';\nimport './App.css';\nimport 'tachyons';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isAuthenticated: false\n    }\n  }\n\n onInputChange = (event) => {\n    const password = \"bruno\";\n    if (event.target.value === password) {\n      this.setState({ isAuthenticated: true });\n    }\n  }\n\n  onLogoutClick = () => {\n      this.setState({ isAuthenticated: false });\n  }\n\n  render () {\n    return (\n          <Router>\n            <div>\n            <Switch>\n              <Route exact path=\"/propisi/\">\n                <Login onInputChange = {this.onInputChange} isAuthenticated={this.state.isAuthenticated} />\n              </Route>\n              <Route exact path=\"/page/\">\n                <Page onLogoutClick = {this.onLogoutClick}/>\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}